from pymongo import MongoClient
from pymongo.errors import ConnectionFailure, ServerSelectionTimeoutError

try:
    # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ—ó MongoDB
    client = MongoClient("mongodb://localhost:27017/", serverSelectionTimeoutMS=5000)
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    client.admin.command('ping')
    db = client.cats_database
    collection = db.cats
    print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB —É—Å–ø—ñ—à–Ω–µ!")
except (ConnectionFailure, ServerSelectionTimeoutError) as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB: {e}")
    print("üí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ MongoDB –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞ localhost:27017")
    exit(1)
except Exception as e:
    print(f"‚ùå –ù–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
    exit(1)

# 1. üìñ READ - –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤
def read_all():
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤"""
    print("\nüê± –í—Å—ñ –∫–æ—Ç–∏ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö:")
    cats = collection.find()
    count = 0
    for cat in cats:
        count += 1
        print(f"{count}. {cat['name']}, –≤—ñ–∫: {cat['age']}, –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ: {cat['features']}")
    
    if count == 0:
        print("‚ùå –ö–æ—Ç—ñ–≤ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –Ω–µ–º–∞—î")

# 2. üìñ READ - –∑–Ω–∞–π—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º
def read_by_name():
    """–ó–Ω–∞–π—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º"""
    try:
        name = input("üîç –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞: ")
        cat = collection.find_one({"name": name})
        
        if cat:
            print(f"\nüê± –ó–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ç–∞:")
            print(f"   –Ü–º'—è: {cat['name']}")
            print(f"   –í—ñ–∫: {cat['age']}")
            print(f"   –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ: {cat['features']}")
        else:
            print(f"‚ùå –ö–æ—Ç –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –∫–æ—Ç–∞: {e}")

# 3. üìù UPDATE - –æ–Ω–æ–≤–∏—Ç–∏ –≤—ñ–∫ –∫–æ—Ç–∞
def update_age():
    """–û–Ω–æ–≤–∏—Ç–∏ –≤—ñ–∫ –∫–æ—Ç–∞"""
    try:
        name = input("üê± –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞: ")
        cat = collection.find_one({"name": name})
        
        if not cat:
            print(f"‚ùå –ö–æ—Ç –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            return
        
        print(f"üìã –ü–æ—Ç–æ—á–Ω–∏–π –≤—ñ–∫ {name}: {cat['age']} —Ä–æ–∫—ñ–≤")
        new_age = int(input("üî¢ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –≤—ñ–∫: "))
        
        if new_age < 0 or new_age > 30:
            print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤—ñ–∫! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 30")
            return
        
        collection.update_one({"name": name}, {"$set": {"age": new_age}})
        print(f"‚úÖ –í—ñ–∫ –∫–æ—Ç–∞ {name} –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {new_age} —Ä–æ–∫—ñ–≤")
    except ValueError:
        print("‚ùå –í–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–µ —á–∏—Å–ª–æ –¥–ª—è –≤—ñ–∫—É!")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–∫—É: {e}")

# 4. üìù UPDATE - –¥–æ–¥–∞—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É
def add_feature():
    """–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –∫–æ—Ç—É"""
    try:
        name = input("üê± –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞: ")
        cat = collection.find_one({"name": name})
        
        if not cat:
            print(f"‚ùå –ö–æ—Ç –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            return
        
        print(f"üìã –ü–æ—Ç–æ—á–Ω—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ {name}: {cat['features']}")
        new_feature = input("‚ûï –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –æ—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å: ").strip()
        
        if not new_feature:
            print("‚ùå –û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—É—Å—Ç–æ—é!")
            return
        
        if new_feature in cat['features']:
            print(f"‚ö†Ô∏è –û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å '{new_feature}' –≤–∂–µ —ñ—Å–Ω—É—î!")
            return
        
        collection.update_one({"name": name}, {"$push": {"features": new_feature}})
        print(f"‚úÖ –û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å '{new_feature}' –¥–æ–¥–∞–Ω–∞ –∫–æ—Ç—É {name}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ: {e}")

# 5. üóëÔ∏è DELETE - –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º
def delete_by_name():
    """–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º"""
    try:
        name = input("üê± –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ")
        cat = collection.find_one({"name": name})
        
        if not cat:
            print(f"‚ùå –ö–æ—Ç –∑ —ñ–º'—è–º '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            return
        
        print(f"üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ç–∞: {cat['name']}, {cat['age']} —Ä–æ–∫—ñ–≤")
        confirm = input("‚ùì –¢–æ—á–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏? (—Ç–∞–∫/–Ω—ñ): ")
        
        if confirm.lower() in ['—Ç–∞–∫', 'yes', 'y']:
            result = collection.delete_one({"name": name})
            if result.deleted_count > 0:
                print(f"‚úÖ –ö–æ—Ç {name} –≤–∏–¥–∞–ª–µ–Ω–∏–π")
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–æ—Ç–∞ {name}")
        else:
            print("‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–æ—Ç–∞: {e}")

# 6. üóëÔ∏è DELETE - –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤
def delete_all():
    """–í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤"""
    try:
        count = collection.count_documents({})
        
        if count == 0:
            print("‚ùå –í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –Ω–µ–º–∞—î –∫–æ—Ç—ñ–≤")
            return
        
        print(f"üóëÔ∏è –í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö {count} –∫–æ—Ç—ñ–≤")
        confirm = input("‚ùì –í–∏–¥–∞–ª–∏—Ç–∏ –í–°–Ü–• –∫–æ—Ç—ñ–≤? (—Ç–∞–∫/–Ω—ñ): ")
        
        if confirm.lower() in ['—Ç–∞–∫', 'yes', 'y']:
            result = collection.delete_many({})
            print(f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {result.deleted_count} –∫–æ—Ç—ñ–≤")
        else:
            print("‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–æ—Ç—ñ–≤: {e}")

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
def main_menu():
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    while True:
        print("\nüê± –ú–ï–ù–Æ:")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤")
        print("2 - –ó–Ω–∞–π—Ç–∏ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º")
        print("3 - –û–Ω–æ–≤–∏—Ç–∏ –≤—ñ–∫ –∫–æ—Ç–∞")
        print("4 - –î–æ–¥–∞—Ç–∏ –æ—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å –∫–æ—Ç—É")
        print("5 - –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ç–∞")
        print("6 - –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ç—ñ–≤")
        print("0 - –í–∏—Ö—ñ–¥")
        
        choice = input("\nüéØ –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ")
        
        if choice == '1':
            read_all()
        elif choice == '2':
            read_by_name()
        elif choice == '3':
            update_age()
        elif choice == '4':
            add_feature()
        elif choice == '5':
            delete_by_name()
        elif choice == '6':
            delete_all()
        elif choice == '0':
            print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break
        else:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä")

# –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫—ñ–Ω–µ—Ü—å —Ñ–∞–π–ª—É
if __name__ == "__main__":
    print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB —É—Å–ø—ñ—à–Ω–µ!")
    print("\nüê± –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –ö–û–¢–ê–ú–ò")
    print("=" * 40)
    
    
    try:
        # –î–æ–¥–∞–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ç–∞
        if collection.count_documents({}) == 0:
            test_cat = {
                "name": "barsik",
                "age": 3,
                "features": ["—Ö–æ–¥–∏—Ç—å –≤ –∫–∞–ø—Ü—è—Ö", "–¥–∞—î —Å–µ–±–µ –≥–ª–∞–¥–∏—Ç–∏", "—Ä—É–¥–∏–π"]
            }
            collection.insert_one(test_cat)
            print("‚ûï –î–æ–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ç–∞ Barsik")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–µ–Ω—é
        main_menu()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        print("üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB")