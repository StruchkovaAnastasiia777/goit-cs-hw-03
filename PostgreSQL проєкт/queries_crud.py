# queries_crud.py - INSERT/UPDATE/DELETE –∑–∞–ø–∏—Ç–∏ –¥–ª—è –∑–º—ñ–Ω–∏ –¥–∞–Ω–∏—Ö

from db_config import get_task_management_connection, get_db_cursor

def query_3_update_task_status(task_id, new_status):
    """üîÑ 3. –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–≤–¥–∞–Ω–Ω—è"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∑–∞–≤–¥–∞–Ω–Ω—è
        cur.execute("SELECT title, status_id FROM tasks WHERE id = %s", (task_id,))
        task = cur.fetchone()
        
        if not task:
            print(f"‚ùå –ó–∞–≤–¥–∞–Ω–Ω—è –∑ ID {task_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∏–π —Å—Ç–∞—Ç—É—Å
        cur.execute("SELECT id FROM status WHERE name = %s", (new_status,))
        status = cur.fetchone()
        
        if not status:
            print(f"‚ùå –°—Ç–∞—Ç—É—Å '{new_status}' –Ω–µ —ñ—Å–Ω—É—î")
            print("üí° –î–æ—Å—Ç—É–ø–Ω—ñ —Å—Ç–∞—Ç—É—Å–∏: new, in progress, completed")
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ –æ–Ω–æ–≤–ª—é—î–º–æ
        cur.execute("""
            SELECT s.name FROM status s WHERE s.id = %s
        """, (task[1],))
        current_status = cur.fetchone()
        
        print(f"üìã –ó–∞–≤–¥–∞–Ω–Ω—è: {task[0]}")
        print(f"üìä –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å: {current_status[0] if current_status else '–Ω–µ–≤—ñ–¥–æ–º–æ'}")
        print(f"üîÑ –ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å: {new_status}")
        
        # –ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        cur.execute("""
            UPDATE tasks 
            SET status_id = %s
            WHERE id = %s
        """, (status[0], task_id))
        
        conn.commit()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–≤–¥–∞–Ω–Ω—è {task_id} —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_5_add_new_task(title, description, user_id):
    """‚ûï 5. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è"""  
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        cur.execute("SELECT fullname FROM users WHERE id = %s", (user_id,))
        user = cur.fetchone()
        
        if not user:
            print(f"‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            cur.execute("SELECT id, fullname FROM users LIMIT 5")
            users = cur.fetchall()
            print("üí° –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:")
            for u in users:
                print(f"   ID: {u[0]} - {u[1]}")
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ –¥–æ–¥–∞—î–º–æ
        print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user[0]}")
        print(f"üìù –ó–∞–≤–¥–∞–Ω–Ω—è: {title}")
        print(f"üí¨ –û–ø–∏—Å: {description[:50]}..." if len(description) > 50 else f"üí¨ –û–ø–∏—Å: {description}")

        # –ó–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
        cur.execute("""
            INSERT INTO tasks (title, description, user_id, status_id) 
            VALUES (%s, %s, %s, (SELECT id FROM status WHERE name = 'new'))
        """, (title, description, user_id))

        conn.commit()
        
        # –û—Ç—Ä–∏–º—É—î–º–æ ID –Ω–æ–≤–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
        new_task_id = cur.lastrowid
        print(f"‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
        print(f"üÜî ID –Ω–æ–≤–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è: {new_task_id if new_task_id else '–Ω–µ–≤—ñ–¥–æ–º–æ'}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: new")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è: {e}")    
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()
        

def query_7_delete_task(task_id):
    """üóëÔ∏è 7. –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è"""
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
    
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∑–∞–≤–¥–∞–Ω–Ω—è
        cur.execute("""
            SELECT t.title, u.fullname, s.name 
            FROM tasks t
            LEFT JOIN users u ON t.user_id = u.id
            LEFT JOIN status s ON t.status_id = s.id
            WHERE t.id = %s
        """, (task_id,))
        task = cur.fetchone()
        
        if not task:
            print(f"‚ùå –ó–∞–≤–¥–∞–Ω–Ω—è –∑ ID {task_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
            cur.execute("SELECT id, title FROM tasks LIMIT 5")
            tasks = cur.fetchall()
            print("üí° –î–æ—Å—Ç—É–ø–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:")
            for t in tasks:
                print(f"   ID: {t[0]} - {t[1]}")
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ –≤–∏–¥–∞–ª—è—î–º–æ
        print(f"üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è:")
        print(f"   üìù –ù–∞–∑–≤–∞: {task[0]}")
        print(f"   üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {task[1] or '–Ω–µ–≤—ñ–¥–æ–º–æ'}")
        print(f"   üìä –°—Ç–∞—Ç—É—Å: {task[2] or '–Ω–µ–≤—ñ–¥–æ–º–æ'}")
        
        # –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        cur.execute("DELETE FROM tasks WHERE id = %s", (task_id,))
        
        conn.commit()
        print(f"‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è {task_id} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è: {e}")
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_9_update_user_name(user_id, new_name):
    """‚úèÔ∏è 9. –û–Ω–æ–≤–∏—Ç–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        cur.execute("SELECT fullname, email FROM users WHERE id = %s", (user_id,))
        user = cur.fetchone()
        
        if not user:
            print(f"‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            cur.execute("SELECT id, fullname FROM users LIMIT 5")
            users = cur.fetchall()
            print("üí° –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:")
            for u in users:
                print(f"   ID: {u[0]} - {u[1]}")
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ –æ–Ω–æ–≤–ª—é—î–º–æ
        print(f"‚úèÔ∏è –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
        print(f"   üë§ –ü–æ—Ç–æ—á–Ω–µ —ñ–º'—è: {user[0]}")
        print(f"   üìß Email: {user[1]}")
        print(f"   üîÑ –ù–æ–≤–µ —ñ–º'—è: {new_name}")
        
        # –ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        cur.execute("UPDATE users SET fullname = %s WHERE id = %s", (new_name, user_id))
        
        conn.commit()
        print(f"‚úÖ –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —ñ–º–µ–Ω—ñ: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def show_database_stats():
    """üìä –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–ò –î–ê–ù–ò–•:")
        print("=" * 50)
        
        # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        cur.execute("SELECT COUNT(*) FROM users")
        result = cur.fetchone()
        users_count = result[0] if result else 0
        print(f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {users_count}")
        
        # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å
        cur.execute("SELECT COUNT(*) FROM tasks")
        result = cur.fetchone()
        tasks_count = result[0] if result else 0    
        print(f"üìù –ó–∞–≤–¥–∞–Ω—å: {tasks_count}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞—Ö
        cur.execute("""
            SELECT s.name, COUNT(t.id) 
            FROM status s 
            LEFT JOIN tasks t ON s.id = t.status_id 
            GROUP BY s.name
        """)
        status_stats = cur.fetchall()
        print(f"\nüìà –†–æ–∑–ø–æ–¥—ñ–ª –∑–∞–≤–¥–∞–Ω—å –ø–æ —Å—Ç–∞—Ç—É—Å–∞—Ö:")
        for status, count in status_stats:
            print(f"   {status}: {count} –∑–∞–≤–¥–∞–Ω—å")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏ CRUD –æ–ø–µ—Ä–∞—Ü—ñ–π
    #query_3_update_task_status(23, '3')
    #query_5_add_new_task('–¢–µ—Å—Ç–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è', '–û–ø–∏—Å –∑–∞–≤–¥–∞–Ω–Ω—è', 2)
    #query_7_delete_task(22)
    query_9_update_user_name(18,'–ù–æ–≤–µ3 –Ü–º—è')