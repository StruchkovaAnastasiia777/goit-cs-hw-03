import psycopg2
from faker import Faker
import random
from db_config import get_task_management_connection, get_db_cursor

fake = Faker(['uk_UA'])

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö
conn = None
cur = None

try:
    # üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ—ñ–≥
    conn = get_task_management_connection()  
    cur = get_db_cursor(conn)
    
    print("üßπ –û—á–∏—â—É—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ...")
    
    # –ö—Ä–æ–∫ 2: –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å —É –ü–†–ê–í–ò–õ–¨–ù–û–ú–£ –ø–æ—Ä—è–¥–∫—É
    cur.execute("DELETE FROM tasks;")    # –°–ø–æ—á–∞—Ç–∫—É –¥–æ—á—ñ—Ä–Ω—ñ (–∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ–º–∏ –∫–ª—é—á–∞–º–∏)
    cur.execute("DELETE FROM users;")    # –ü–æ—Ç—ñ–º –±–∞—Ç—å–∫—ñ–≤—Å—å–∫—ñ  
    cur.execute("DELETE FROM status;")   # –ü–æ—Ç—ñ–º –±–∞—Ç—å–∫—ñ–≤—Å—å–∫—ñ
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ñ –æ—á–∏—â–µ–Ω—ñ.")
    
    print("\nüìä –î–æ–¥–∞—î–º–æ –¥–æ–≤—ñ–¥–∫–æ–≤—ñ –¥–∞–Ω—ñ...")
    
    # –ö—Ä–æ–∫ 3: –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å–∏
    statuses = [('new',), ('in progress',), ('completed',)]
    for status in statuses:
        cur.execute("INSERT INTO status (name) VALUES (%s);", status)
    print("‚úÖ –°—Ç–∞—Ç—É—Å–∏ –¥–æ–¥–∞–Ω—ñ: new, in progress, completed")
    
    print("\nüë• –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...")
    
    # –ö—Ä–æ–∫ 4: –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤  
    for i in range(10):
        fullname = fake.name()
        email = fake.email()
        cur.execute("INSERT INTO users (fullname, email) VALUES (%s, %s);", (fullname, email))
    print("‚úÖ –î–æ–¥–∞–Ω–æ 10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º–∏ —ñ–º–µ–Ω–∞–º–∏")
    
    print("\nüìã –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è...")
    
    # –ö—Ä–æ–∫ 5: –û—Ç—Ä–∏–º—É—î–º–æ ID –¥–ª—è –∑–∞–≤–¥–∞–Ω—å
    cur.execute("SELECT id FROM users;")
    user_ids = [row[0] for row in cur.fetchall()]
    
    cur.execute("SELECT id FROM status;")
    status_ids = [row[0] for row in cur.fetchall()]
    
    print(f"üìä –ó–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {len(user_ids)}, —Å—Ç–∞—Ç—É—Å—ñ–≤: {len(status_ids)}")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è
    for i in range(20):
        title = fake.sentence(nb_words=4)
        description = fake.text() if random.choice([True, False]) else None  # –Ü–Ω–æ–¥—ñ –±–µ–∑ –æ–ø–∏—Å—É
        user_id = random.choice(user_ids)
        status_id = random.choice(status_ids)
        
        cur.execute("""
            INSERT INTO tasks (title, description, user_id, status_id) 
            VALUES (%s, %s, %s, %s);
        """, (title, description, user_id, status_id))
    
    print("‚úÖ –î–æ–¥–∞–Ω–æ 20 –∑–∞–≤–¥–∞–Ω—å")
    
    # –ö–æ–º–º—ñ—Ç –∑–º—ñ–Ω
    conn.commit()
    
    print("\nüéâ –í—Å—ñ –¥–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω—ñ!")
    print("=" * 50)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    
    cur.execute("SELECT COUNT(*) FROM users;")
    result = cur.fetchone()
    users_count = result[0] if result else 0

    cur.execute("SELECT COUNT(*) FROM status;")
    result = cur.fetchone()
    status_count = result[0] if result else 0

    cur.execute("SELECT COUNT(*) FROM tasks;")
    result = cur.fetchone()
    tasks_count = result[0] if result else 0
    
    print(f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {users_count}")
    print(f"üìä –°—Ç–∞—Ç—É—Å—ñ–≤: {status_count}")
    print(f"üìã –ó–∞–≤–¥–∞–Ω—å: {tasks_count}")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–ø–æ–¥—ñ–ª –∑–∞–≤–¥–∞–Ω—å –∑–∞ —Å—Ç–∞—Ç—É—Å–∞–º–∏
    cur.execute("""
        SELECT s.name, COUNT(t.id) 
        FROM status s 
        LEFT JOIN tasks t ON s.id = t.status_id 
        GROUP BY s.name
    """)
    
    print("\nüìà –†–æ–∑–ø–æ–¥—ñ–ª –∑–∞–≤–¥–∞–Ω—å –∑–∞ —Å—Ç–∞—Ç—É—Å–∞–º–∏:")
    for status_name, count in cur.fetchall():
        print(f"  {status_name}: {count} –∑–∞–≤–¥–∞–Ω—å")
    
except psycopg2.Error as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
finally:
    if cur:
        cur.close()
    if conn:
        conn.close()
        print("\nüö™ –ó'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ.")