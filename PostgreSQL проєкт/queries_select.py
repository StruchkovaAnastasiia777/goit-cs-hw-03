from db_config import get_task_management_connection, get_db_cursor

def query_1_user_tasks(user_id):
    """üìã 1. –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ user_id"""
    
    conn = None
    cur = None
    
    try:
        # üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        # ‚ö° –¢–≤—ñ–π SQL –∑–∞–ø–∏—Ç
        cur.execute("""
            SELECT user_id, title, description
            FROM tasks t
            WHERE user_id = %s
        """, (user_id,))
        
        # üìä –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        results = cur.fetchall()
        
        # üé® –ì–∞—Ä–Ω–∏–π –≤–∏–≤—ñ–¥
        if results:
            print(f"\nüìã –ó–∞–≤–¥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}:")
            print(f"–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å: {len(results)}")
            print("–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ –æ–ø–∏—Å:")
            print("-" * 50)
            for task in results:
                print(f"‚úÖ {task[1]}")
                if task[2]:
                    print(f"   üí¨ {task[2]}")
                else:
                    print(f"   üí¨ –ë–µ–∑ –æ–ø–∏—Å—É")
        else:
            print(f"‚ùå –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –Ω–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

            
def query_2_user_status(name):
    """üìä 2. –ó–∞–≤–¥–∞–Ω–Ω—è –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º"""
    
    conn = None
    cur = None

    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT t.status_id, s.name, t.title, t.description
            FROM tasks t
            LEFT JOIN status s ON t.status_id = s.id
            WHERE s.name = %s
        """, (name,))
     
        results = cur.fetchall()
        
        if results:
            print(f"\nüìä –ó–∞–≤–¥–∞–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º '{name}':")
            print(f"–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å: {len(results)}")
            print("-" * 50)
            for task in results:
                print(f"‚úÖ **–ó–∞–≥–æ–ª–æ–≤–æ–∫**: {task[2]}")
                print(f"üìä –°—Ç–∞—Ç—É—Å: {task[1]} (ID: {task[0]})")
                if task[3]:  # ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ description
                    print(f"üí¨ –û–ø–∏—Å: {task[3]}")
                else:
                    print("üí¨ –ë–µ–∑ –æ–ø–∏—Å—É")
                print("_" * 50)
        else:
            print(f"‚ùå –ù–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º '{name}'") 
                
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_3_search_user_email(email):
    """üîç 3. –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ —ñ–º'—è–º —ñ email"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT fullname, email
            FROM users 
            WHERE email ILIKE %s
        """, (f'%{email}%',)) 
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüîç –ó–Ω–∞–π–¥–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑ '{email}' —É email:")
            print("-" * 50)
            for user in results:
                print(f"üë§ –Ü–º'—è: {user[0]}, Email: {user[1]}") 
            print(f"\n–í—Å—å–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(results)}")
        else:
            print(f"‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑ '{email}' —É email –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_4_users_not_task():
    """üë• 4. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –±–µ–∑ –∑–∞–≤–¥–∞–Ω—å"""

    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        # ‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –ë–ï–ó –∑–∞–≤–¥–∞–Ω—å
        cur.execute("""
            SELECT u.id, u.fullname, u.email
            FROM users u
            LEFT JOIN tasks t ON u.id = t.user_id
            WHERE t.user_id IS NULL
        """)
        
        results = cur.fetchall()
        
        if results:
            print("\nüë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –±–µ–∑ –∑–∞–≤–¥–∞–Ω—å:")
            print(f"–í—Å—å–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(results)}")
            print("-" * 50)
            for user in results:
                print(f"üë§ ID: {user[0]} | {user[1]} ({user[2]})")
        else:
            print("‚úÖ –í—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –º–∞—é—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_5_add_new_task_select(title, description, user_id):
    """‚ûï 5. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        cur.execute("SELECT fullname FROM users WHERE id = %s", (user_id,))
        user = cur.fetchone()
        
        if not user:
            print(f"‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            cur.execute("SELECT id, fullname FROM users LIMIT 5")
            users = cur.fetchall()
            print("üí° –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:")
            for u in users:
                print(f"   ID: {u[0]} - {u[1]}")
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ –¥–æ–¥–∞—î–º–æ
        print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user[0]}")
        print(f"üìù –ó–∞–≤–¥–∞–Ω–Ω—è: {title}")
        print(f"üí¨ –û–ø–∏—Å: {description[:50]}..." if len(description) > 50 else f"üí¨ –û–ø–∏—Å: {description}")

        # –ó–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º ID
        cur.execute("""
            INSERT INTO tasks (title, description, user_id, status_id) 
            VALUES (%s, %s, %s, (SELECT id FROM status WHERE name = 'new'))
            RETURNING id
        """, (title, description, user_id))
        result = cur.fetchone()
        if result:
            new_task_id = result[0]
            conn.commit()
    
            print(f"‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
            print(f"üÜî ID –Ω–æ–≤–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è: {new_task_id}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: new")
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è: {e}")    
        if conn:
            conn.rollback()
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_6_incomplete_tasks():
    """üìã 6. –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫—ñ —â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT t.id, t.title, u.fullname, s.name
            FROM tasks t
            JOIN users u ON t.user_id = u.id
            JOIN status s ON t.status_id = s.id
            WHERE s.name != 'completed'
        """)
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüìã –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:")
            print(f"–í—Å—å–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(results)}")
            print("-" * 50)
            for task in results:
                print(f"üÜî ID: {task[0]} | üìù {task[1]}")
                print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {task[2]}")
                print(f"üìä –°—Ç–∞—Ç—É—Å: {task[3]}")
                print("_" * 50)
        else:
            print("‚úÖ –í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω—ñ!")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_10_count_by_status():
    """üìä 10. –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT s.name, COUNT(t.id) as task_count
            FROM status s
            LEFT JOIN tasks t ON s.id = t.status_id
            GROUP BY s.name
        """)
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å –ø–æ —Å—Ç–∞—Ç—É—Å–∞—Ö:")
            print("-" * 50)
            total_tasks = 0
            for status_name, count in results:
                print(f"üìà {status_name}: {count} –∑–∞–≤–¥–∞–Ω—å")
                total_tasks += count
            print(f"\nüî¢ –ó–∞–≥–∞–ª–æ–º –∑–∞–≤–¥–∞–Ω—å: {total_tasks}")
        else:
            print("‚ùå –°—Ç–∞—Ç—É—Å–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_11_tasks_by_domain(domain):
    """üåê 11. –ó–∞–≤–¥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–µ–≤–Ω–∏–º –¥–æ–º–µ–Ω–æ–º email"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT t.title, u.fullname, u.email
            FROM tasks t
            JOIN users u ON t.user_id = u.id
            WHERE u.email LIKE %s
        """, (f'%{domain}%',))
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüåê –ó–∞–≤–¥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –¥–æ–º–µ–Ω–æ–º '{domain}':")
            print(f"–í—Å—å–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(results)}")
            print("-" * 50)
            for task in results:
                print(f"üìù –ó–∞–≤–¥–∞–Ω–Ω—è: {task[0]}")
                print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {task[1]} ({task[2]})")
                print("_" * 50)
        else:
            print(f"‚ùå –ó–∞–≤–¥–∞–Ω—å –∑ –¥–æ–º–µ–Ω–æ–º '{domain}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_12_tasks_no_description():
    """üìù 12. –ó–∞–≤–¥–∞–Ω–Ω—è –±–µ–∑ –æ–ø–∏—Å—É"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT t.id, t.title, u.fullname
            FROM tasks t
            JOIN users u ON t.user_id = u.id
            WHERE t.description IS NULL OR t.description = ''
        """)
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüìù –ó–∞–≤–¥–∞–Ω–Ω—è –±–µ–∑ –æ–ø–∏—Å—É:")
            print(f"–í—Å—å–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(results)}")
            print("-" * 50)
            for task in results:
                print(f"üÜî ID: {task[0]} | üìù {task[1]}")
                print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {task[2]}")
                print("_" * 50)
        else:
            print("‚úÖ –í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –º–∞—é—Ç—å –æ–ø–∏—Å!")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_13_users_in_progress():
    """üîÑ 13. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–∞ —ó—Ö –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —Å—Ç–∞—Ç—É—Å—ñ 'in progress'"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT u.fullname, t.title
            FROM users u
            INNER JOIN tasks t ON u.id = t.user_id
            INNER JOIN status s ON t.status_id = s.id
            WHERE s.name = 'in progress'
        """)
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüîÑ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–∞ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —Å—Ç–∞—Ç—É—Å—ñ 'in progress':")
            print(f"–í—Å—å–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(results)}")
            print("-" * 50)
            for user_task in results:
                print(f"üë§ {user_task[0]}: üìù {user_task[1]}")
        else:
            print("‚ùå –ù–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å –≤ —Å—Ç–∞—Ç—É—Å—ñ 'in progress'")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

def query_14_users_task_count():
    """üë• 14. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ó—Ö –∑–∞–≤–¥–∞–Ω—å"""
    
    conn = None
    cur = None
    
    try:
        conn = get_task_management_connection()
        cur = get_db_cursor(conn)
        
        cur.execute("""
            SELECT u.fullname, COUNT(t.id) as task_count
            FROM users u
            LEFT JOIN tasks t ON u.id = t.user_id
            GROUP BY u.id, u.fullname
            ORDER BY task_count DESC
        """)
        
        results = cur.fetchall()
        
        if results:
            print(f"\nüë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ó—Ö –∑–∞–≤–¥–∞–Ω—å:")
            print("-" * 50)
            for user_data in results:
                print(f"üë§ {user_data[0]}: {user_data[1]} –∑–∞–≤–¥–∞–Ω—å")
        else:
            print("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
    finally:
        if cur:
            cur.close()
        if conn:
            conn.close()

if __name__ == "__main__":

    
    # –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–ª–∏–∫—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ–π
    # query_1_user_tasks(17)  # –ó–∞–º—ñ–Ω–∏ 1 –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π user_id
    # query_2_user_status('new')  # –ó–∞–º—ñ–Ω–∏ 'new' –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Å—Ç–∞—Ç—É—Å
    # query_3_search_user_email('com') # –ó–∞–º—ñ–Ω–∏ 'com' –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π email
    # query_4_users_not_task()  # –í–∏–≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –±–µ–∑ –∑–∞–≤–¥–∞–Ω—å
    # query_5_add_new_task_select('–¢–µ—Å—Ç–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è', '–û–ø–∏—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è', 1)
    # query_6_incomplete_tasks()  # –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
    # query_10_count_by_status()  # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º  
    # query_11_tasks_by_domain('gmail.com')  # –ó–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –¥–æ–º–µ–Ω–æ–º
    # query_12_tasks_no_description()  # –ó–∞–≤–¥–∞–Ω–Ω—è –±–µ–∑ –æ–ø–∏—Å—É
    # query_13_users_in_progress()  # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ 'in progress'
    #query_14_users_task_count()  # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å
    pass